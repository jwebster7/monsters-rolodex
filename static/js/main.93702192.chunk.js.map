{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","usersDisplay","users","map","user","Search","placeHolder","handleSearchInput","type","placeholder","onChange","App","useState","setUsers","searchText","setSearchText","useEffect","fetch","then","response","json","filteredUsers","filter","toLowerCase","includes","e","target","value","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAiBeA,G,MAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BL,EAA1B,eAEL,6BAAKC,IACL,4BAAIC,MAN+BF,KCS1BM,G,MAVE,SAAC,GAAe,IACzBC,EADwB,EAAZC,MACSC,KAAI,SAACC,GAC9B,OACE,cAAC,EAAD,eAAwBA,GAAbA,EAAKV,OAIpB,OAAO,qBAAKG,UAAU,YAAf,SAA4BI,MCItBI,G,MAXA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,kBAC7B,OACE,uBACEV,UAAU,aACVW,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCyBDI,MA7Bf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEuBD,mBAAS,IAFhC,mBAENE,EAFM,KAEMC,EAFN,KAIbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GAAD,OAAWW,EAASX,QAC3B,IAEH,IAIMmB,EAAgBP,EAClBZ,EAAMoB,QAAO,SAAClB,GAAD,OACXA,EAAKT,KAAK4B,cAAcC,SAASV,EAAWS,kBAE9CrB,EAEJ,OACE,sBAAKL,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQS,YAAY,SAASC,kBAbP,SAACkB,GACzBV,EAAcU,EAAEC,OAAOC,MAAMC,eAa3B,cAAC,EAAD,CAAU1B,MAAOmB,QCnBRQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93702192.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"card-container\" key={id}>\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${id}?set=set2`}\n      />\n      <h3>{name}</h3>\n      <p>{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"../Card/Card\";\nimport \"./CardList.css\";\n\nconst CardList = ({ users }) => {\n  const usersDisplay = users.map((user) => {\n    return (\n      <Card key={user.id} {...user} />\n    );\n  });\n\n  return <div className=\"card-list\">{usersDisplay}</div>;\n};\n\nexport default CardList;\n","// import React, { useState } from \"react\";\nimport React from \"react\";\n\nimport './Search.css';\n\nconst Search = ({ placeHolder, handleSearchInput }) => {\n  return (\n    <input\n      className='search-box'\n      type=\"search\"\n      placeholder={placeHolder}\n      onChange={handleSearchInput}\n    />\n  );\n};\n\nexport default Search;\n","// import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport CardList from \"./components/CardList/CardList\";\nimport Search from \"./components/Search/Search\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setUsers(users));\n  }, []);\n\n  const handleSearchInput = (e) => {\n    setSearchText(e.target.value.toString());\n  };\n\n  const filteredUsers = searchText\n    ? users.filter((user) =>\n        user.name.toLowerCase().includes(searchText.toLowerCase())\n      )\n    : users;\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <Search placeHolder=\"search\" handleSearchInput={handleSearchInput} />\n      <CardList users={filteredUsers} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}